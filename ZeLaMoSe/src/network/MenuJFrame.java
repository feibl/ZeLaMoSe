/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package network;

import java.awt.HeadlessException;
import java.net.MalformedURLException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.List;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import network.NetworkHandler.UpdateType;

/**
 *
 * @author Fabian Senn <fsenn@hsr.ch>
 */
public class MenuJFrame extends javax.swing.JFrame implements Observer {

   GameServerImpl gameServerImpl;
   NetworkHandler networkHandler;

   /**
    * Creates new form Menu
    */
   public MenuJFrame() {
      initComponents();
   }

   private void connectToServer(String ip) {
      networkHandler = new NetworkHandlerImpl();
      networkHandler.addObserver(this);
      String nickname = JOptionPane.showInputDialog(null, "Nickname");
      networkHandler.connectToServer(ip, "Tetris", nickname);
   }

   private String getUserName() throws HeadlessException {
      String name = JOptionPane.showInputDialog(null, "Eingabe des Nickname");
      if (name != null && name.trim().length() > 0) {
      } else {
         JOptionPane.showMessageDialog(null, "Bitte geben Sie einen Nickname mit mehr als 1 Zeichen ein.");
         System.exit(0);
      }
      return name;
   }

   /**
    * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code.
    * The content of this method is always regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnHost = new javax.swing.JButton();
        btnJoin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnHost.setText("Host");
        btnHost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHostActionPerformed(evt);
            }
        });

        btnJoin.setText("Join");
        btnJoin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJoinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnHost, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                    .addComponent(btnJoin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnHost)
                .addGap(18, 18, 18)
                .addComponent(btnJoin)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   private void btnHostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHostActionPerformed
      try {
         // TODO add your handling code here:
         Registry registry = LocateRegistry.createRegistry(Registry.REGISTRY_PORT);
         gameServerImpl = new GameServerImpl("Tetris", registry);
         connectToServer("localhost");
      } catch (RemoteException ex) {
         Logger.getLogger(MenuJFrame.class.getName()).log(Level.SEVERE, null, ex);
      } catch (MalformedURLException ex) {
         Logger.getLogger(MenuJFrame.class.getName()).log(Level.SEVERE, null, ex);
      }
   }//GEN-LAST:event_btnHostActionPerformed

   private void btnJoinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJoinActionPerformed

      String ip = JOptionPane.showInputDialog(null, "IP");
      connectToServer(ip);

   }//GEN-LAST:event_btnJoinActionPerformed

   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
      /*
       * Set the Nimbus look and feel
       */
      //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
       * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel. For details see
       * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
       */
      try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
               javax.swing.UIManager.setLookAndFeel(info.getClassName());
               break;
            }
         }
      } catch (ClassNotFoundException ex) {
         java.util.logging.Logger.getLogger(MenuJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex) {
         java.util.logging.Logger.getLogger(MenuJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex) {
         java.util.logging.Logger.getLogger(MenuJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(MenuJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //</editor-fold>

      /*
       * Create and display the form
       */
      java.awt.EventQueue.invokeLater(new Runnable() {

         public void run() {
            new MenuJFrame().setVisible(true);
         }
      });
   }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHost;
    private javax.swing.JButton btnJoin;
    // End of variables declaration//GEN-END:variables

   @Override
   public void update(Observable o, Object o1) {
      UpdateType type = (UpdateType) o1;
      switch (type) {
         case CONNECTION_ESTABLISHED:
            synchronized (networkHandler) {
               List<SessionInformation> sessionList = networkHandler.getSessionList();
               final ClientJFrame clientJFrame = new ClientJFrame(gameServerImpl, networkHandler, sessionList);
               
               java.awt.EventQueue.invokeLater(new Runnable() {
                  public void run() {
                     clientJFrame.setVisible(true);
                  }
               });

               networkHandler.deleteObserver(this);
               networkHandler.addObserver(clientJFrame);
            }
            setVisible(false);
            break;
         case EXCEPTION_THROWN:
            break;
      }
   }
}
